apiVersion: v1
kind: ServiceAccount
metadata:
  namespace: kong
  name: kong
  labels:
    app: kong
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  namespace: kong
  name: kong
  labels:
    app: kong
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  namespace: kong
  name: kong
  labels:
    app: kong
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kong
subjects:
- kind: ServiceAccount
  namespace: kong
  name: kong
---
apiVersion: v1
kind: ImageStream
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: konga
  name: konga
spec:
  lookupPolicy:
    local: false
  tags:
    - annotations: null
      from:
        kind: DockerImage
        name: pantsel/konga
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
status:
  dockerImageRepository: ""
---
apiVersion: v1
kind: DeploymentConfig
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: konga
  name: konga
spec:
  replicas: 1
  selector:
    io.kompose.service: konga
  strategy:
    resources: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/konga-kong-net: "true"
        io.kompose.service: konga
    spec:
      containers:
        - env:
            - name: NODE_ENV
              value: production
          image: ' '
          name: konga
          ports:
            - containerPort: 1337
          resources: {}
      restartPolicy: Always
  test: false
  triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
          - konga
        from:
          kind: ImageStreamTag
          name: konga:latest
      type: ImageChange
status:
  availableReplicas: 0
  latestVersion: 0
  observedGeneration: 0
  replicas: 0
  unavailableReplicas: 0
  updatedReplicas: 0
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: konga
  name: konga
spec:
  ports:
    - name: "1337"
      port: 1337
      targetPort: 1337
  selector:
    io.kompose.service: konga
status:
  loadBalancer: {}
